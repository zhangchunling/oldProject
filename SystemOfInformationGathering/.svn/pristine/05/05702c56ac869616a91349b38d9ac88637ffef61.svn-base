package com.zrgk.email.action;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.UUID;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.IOUtils;
import org.apache.struts2.ServletActionContext;

import com.opensymphony.xwork2.ActionSupport;
import com.zrgk.email.model.Email;
import com.zrgk.email.model.Receive;
import com.zrgk.email.service.EmailService;
import com.zrgk.utils.ExportExcel;
import com.zrgk.utils.Page;
 

/**
 * 
 * 邮件系统的action
 * 
 * @author wfh
 * 
 *         2015-7-14
 * 
 */

 
public class EmailAction extends ActionSupport {

	// ========================生成属性的位置=====================================

	private static final long serialVersionUID = -3454284959875115674L;

	private EmailService emailService;

	private Integer nextPage;

	private String fileName;
	private Integer upPage;

	private Integer title;
	private Integer endPage;

	private Integer current;
	
	private Integer current2;

	private String resultpath;

	private Integer id;
	
	 
	private Integer total;

	private Email email;

	private String keyword;

	private Integer order;
	private String ids;
	private File emailFile;

	private String emailFileContentType;

	private String emailFileFileName;

	private List emp;

	private List<Email> reList;
	private Email looks;
	private Email receives;

	private List list = new ArrayList<>();

	// ======================写方法的位置========================================

	// ================发件箱=====================
	public String giveemail() {

		if (current == null) {
			current = 1;
		}

		HttpSession session = ServletActionContext.getRequest().getSession();

		String send = String.valueOf(session.getAttribute("userInfo"));
		Email e = new Email();
		System.out.println("geveemail中的  == " + keyword + order);
		System.out.println("得到的值title==" + title);
		System.out.println("得到的值order==" + order);

		if (order != null && order == 1) {
			e.setSendTime("order");
			session.setAttribute("order", order);
		}
		if (title != null && title == 1) {

			if (keyword != null && !"".equals(keyword)) {
				session.setAttribute("key", keyword);

				e.setTitle(keyword);
				session.setAttribute("title", title);

			}
		}

		Page pa = new Page();

		total = emailService.totalSize(send);
		pa.setTotalSize(total);
		pa.setCurrentPage(current);

		System.out.println("current===" + current);

		if (current == pa.getTotalPage()) {
			nextPage = current;
			System.out.println("current===" + current);

		} else {
			nextPage = current + 1;
		}
		if (current > 1) {
			upPage = current - 1;
		} else {
			upPage = current;
		}

		endPage = pa.getTotalPage();

		if ( endPage>0) {
			list.clear();

			for (int i = 1; i <= pa.getTotalPage(); i++) {

				list.add(i);
			}

		}

		e.setSend(send);
		emp = emailService.getGiveemail(pa, e);

		this.setResultpath("/Email/giveemail.jsp");
		return "gotojsp";

	}

	// 收件箱的查看的回写方法
	public String empty() {
		HttpSession session = ServletActionContext.getRequest().getSession();
		// 清楚的判断方法
		order = 0;
		keyword = null;
		title = 0;
		session.removeAttribute("key");
		session.removeAttribute("title");
		session.removeAttribute("order");

		System.out.println("清空之后的keyword==" + keyword);

		this.setResultpath("/Email/giveemail.jsp");
		return "gotojsp";

	}

	public String empty2() {
		HttpSession session = ServletActionContext.getRequest().getSession();
		// 清楚的判断方法

		session.removeAttribute("key");
		session.removeAttribute("title");
		session.removeAttribute("order");
		order = 0;
		keyword = null;
		title = 0;
		System.out.println("清空之后的keyword2==" + keyword);

		this.setResultpath("/Email/receiveemail.jsp");
		return "gotojsp";

	}

	public String queryById() {

		System.out.println("queryById中的页面传过来的值id==" + id);

		looks = emailService.queryById(id);

		System.out.println(looks.getAccessory() + looks.getReceive());
		this.setResultpath("/Email/look.jsp");
		return "gotojsp";
	}

	// 发件箱的删除方法
	public String deleteById() {

		System.out.println("action传到的id值===" + id);
		emailService.deleteById(id);

		this.setResultpath("email_giveemail");
		return "gotoaction";
	}

	// 选择删除的方法
	public String selectDelete() {

		System.out.println("得到的ids=" + ids);
		String[] deletes = ids.split(",");
		if (deletes.length > 0) {

			for (int i = 0; i < deletes.length; i++) {

				emailService.deleteById(Integer.parseInt(deletes[i]));
			}
		}

		this.setResultpath("email_giveemail");
		return "gotoaction";
	}

	// ==========================发邮件=======================

	// 发送邮件的方法
	public String sendEmail() throws Exception {

		this.setResultpath("/Email/suc.jsp");

		HttpSession session = ServletActionContext.getRequest().getSession();

		String send = String.valueOf(session.getAttribute("userInfo"));
		Date date = new Date();

		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");

		String sendTime = sdf.format(date);

		 
		if (emailFile!=null&&emailFile.isFile()) {
			
			
			String tempName = emailFileFileName.substring(emailFileFileName
					.lastIndexOf("."));
			
			String alias = UUID.randomUUID().toString().replace("-", "");
			
			 String  newFileName = alias + tempName;
			
			String newPath = ServletActionContext.getServletContext().getRealPath(
					"upload/" + newFileName);
			FileInputStream is = new FileInputStream(emailFile);
			FileOutputStream os = new FileOutputStream(new File(newPath) );
			
			IOUtils.copy(is, os);
			os.flush();
			os.close();
			is.close();
		}

		email.setSendTime(sendTime);
		email.setAccessory(emailFileFileName);
		email.setSend(send);
		email.setState(1);
		 
		emailService.save(email);

		 
		
		Receive r = new Receive();

		Email e = new Email();

		e.setSendTime(sendTime);
		int eid = 0;
		if (emailService.getEmailId(e) != null) {
			eid = emailService.getEmailId(e).getId();
		}

		 
			String[] receives = email.getReceive().split(",");
			
			for (int i = 0; i < receives.length; i++) {
				
				r.setRid(eid);
				r.setRname(receives[i]);
				emailService.addReceive(r);
			}
		 

		return "gotojsp";

	}

	// 得到人员表里所有的人员姓名的方法
	public String receives() {

		/*HttpSession session = ServletActionContext.getRequest().getSession();

		session.setAttribute("userInfo", "王缝华");*/
		emp = emailService.queryAllEmp();

		this.setResultpath("/Email/sendemail.jsp");
		return "gotojsp";
	}

	public void outExport() throws IOException {

		HttpServletResponse response = ServletActionContext.getResponse();

		response.addHeader("Content-Disposition",
				"attachment;filename=email.xls");

		HttpSession session = ServletActionContext.getRequest().getSession();

		ExportExcel<Email> ex = new ExportExcel<Email>();

		String[] headers = { "邮件编号", "发件人", "收件人", "标题", "内容", "附件名", "发送时间" };

		List<Email> dataSet = new ArrayList<Email>();

		String send = String.valueOf(session.getAttribute("userInfo"));
		dataSet = emailService.ExportQueryAll(send);

		OutputStream out = response.getOutputStream();
		ex.exportExcel(headers, dataSet, out);
		out.close();
		System.out.println("excel导出成功！");

	}

	public void outExport2() throws IOException {

		HttpServletResponse response = ServletActionContext.getResponse();

		response.addHeader("Content-Disposition",
				"attachment;filename=email.xls");

		HttpSession session = ServletActionContext.getRequest().getSession();

		ExportExcel<Email> ex = new ExportExcel<Email>();

		String[] headers = { "邮件编号", "发件人", "收件人", "标题", "内容", "附件名", "发送时间" };

		List<Email> dataSet = new ArrayList<Email>();

		String send = String.valueOf(session.getAttribute("userInfo"));
		Email e = new Email();

		e.setSend(send);
		System.out.println("send====" + send);
		Page p = new Page();
		dataSet = emailService.QueryBySend(e, p);

		System.out.println("得到的数据是+====" + dataSet);

		OutputStream out = response.getOutputStream();
		ex.exportExcel(headers, dataSet, out);
		out.close();
		System.out.println("excel22222导出成功！");

	}

	// =======================收件箱=================================

	public String queryByIdReceives() {

		System.out.println("queryById中的页面传过来的值id==" + id);

		receives = emailService.queryById(id);
	
		this.setResultpath("/Email/lookReceive.jsp");
		return "gotojsp";
	}

	public String state() {
		
		Email e=new Email();
		
		 System.out.println("进到state方法中。。。。。。。");
		e.setId(id);
		e.setState(2);
		System.out.println("id ==="+id);
		emailService.upState(e);
 
		this.setResultpath("Email/lookReceive.jsp");
		return "gotojsp";
	}
	
	public String receiveemail() {

		if (current2 == null) {
			current2 = 1;
		}
		HttpSession session = ServletActionContext.getRequest().getSession();

		String send = (String) session.getAttribute("userInfo");

		Email e = new Email();

			e.setSend(send);
			
		if (order != null && order == 1) {
			e.setSendTime("order");
			session.setAttribute("order", order);
		}
		if (title != null && title == 1) {

			if (keyword != null && !"".equals(keyword)) {
				session.setAttribute("key", keyword);
				e.setTitle(keyword);
				session.setAttribute("title", title);

			}
		}

			Page pa = new Page();

		  total = emailService.totalSize2(send);

		pa.setCurrentPage (current2);
		pa.setTotalSize(total);

		if (current2 == pa.getTotalPage()) {
			nextPage = current2;
		} else {
			nextPage = current2 + 1;
		}
		if (current2 > 1) {
			upPage = current2 - 1;
		} else {
			upPage = current2;
		}

		endPage = pa.getTotalPage();

		if (endPage>0) {
			list.clear();
			for (int i = 1; i <= pa.getTotalPage(); i++) {
				list.add(i);
			}

		}
		System.out.println("total=" + total);
		reList = emailService.QueryBySend(e, pa);
		 
		System.out.println("reList===="+reList);
		this.setResultpath("Email/receiveemail.jsp");
		return "gotojsp";
	}
	
	public String Download(){
		 System.out.println("下载的Download方法、、、、、、");
		return SUCCESS;
		 
	}
	
	 
	 
	// --------------------生成get和set方法----------------------------------

	public  String getEmailFileContentType() {
		return emailFileContentType;
	}

	public List<Email> getReList() {
		return reList;
	}

	public void setReList(List<Email> reList) {
		this.reList = reList;
	}

	public void setEmailFileContentType(String emailFileContentType) {
		this.emailFileContentType = emailFileContentType;
	}

	public Email getEmail() {
		return email;
	}

	public void setEmail(Email email) {
		this.email = email;
	}

	public String getResultpath() {
		return resultpath;
	}

	public void setResultpath(String resultpath) {
		this.resultpath = resultpath;
	}

	public List getEmp() {
		return emp;
	}

	public String getIds() {
		return ids;
	}

	public String getKeyword() {
		return keyword;
	}

	public void setKeyword(String keyword) {
		this.keyword = keyword;
	}

	public Integer getOrder() {
		return order;
	}

	public void setOrder(Integer order) {
		this.order = order;
	}

	public Integer getTotal() {
		return total;
	}

	public void setTotal(Integer total) {
		this.total = total;
	}

	 

	public void setIds(String ids) {
		this.ids = ids;
	}

	public Integer getCurrent2() {
		return current2;
	}

	public void setCurrent2(Integer current2) {
		this.current2 = current2;
	}

	public void setEmp(List emp) {
		this.emp = emp;
	}

	public List getList() {
		return list;
	}

	public Integer getTitle() {
		return title;
	}

	public void setTitle(Integer title) {
		this.title = title;
	}

	public void setList(List list) {
		this.list = list;
	}

	public Email getReceives() {
		return receives;
	}

	public void setReceives(Email receives) {
		this.receives = receives;
	}

	public Integer getNextPage() {
		return nextPage;
	}

	public void setNextPage(Integer nextPage) {
		this.nextPage = nextPage;
	}

	public Integer getUpPage() {
		return upPage;
	}

	public void setUpPage(Integer upPage) {
		this.upPage = upPage;
	}

	public Integer getEndPage() {
		return endPage;
	}

	public void setEndPage(Integer endPage) {
		this.endPage = endPage;
	}

	public Integer getCurrent() {
		return current;
	}

	public void setCurrent(Integer current) {
		this.current = current;
	}

	public File getEmailFile() {
		return emailFile;
	}

	public void setEmailFile(File emailFile) {
		this.emailFile = emailFile;
	}

	public Email getLooks() {
		return looks;
	}

	public void setLooks(Email looks) {
		this.looks = looks;
	}

	public String getEmailFileFileName() {
		return emailFileFileName;
	}

	public void setEmailFileFileName(String emailFileFileName) {
		this.emailFileFileName = emailFileFileName;
	}

	public String getFileFileName() {
		return emailFileFileName;
	}

	public void setFileFileName(String fileFileName) {
		this.emailFileFileName = fileFileName;
	}

	public EmailService getEmailService() {
		return emailService;
	}

	public void setEmailService(EmailService emailService) {
		this.emailService = emailService;
	}

	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getFileName() throws Exception {
		return java.net.URLEncoder.encode(fileName, "UTF-8");
	}

	public void setFileName(String fileName) {
		this.fileName = fileName;
	}

	// ==============下面是是写方法的地方===========================

}
